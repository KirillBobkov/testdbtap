// @ts-nocheck
import React, { memo, useContext } from 'react';
import { IconsRenderContext } from '../multi-chart/icons-render-context';
export const LinkIcon = memo(({ label }) => {
    const { svgShapeRendering } = useContext(IconsRenderContext);
    return (React.createElement("span", { "data-icon-name": label },
        React.createElement("svg", { "aria-hidden": "true", width: "20", height: "20", viewBox: "0 0 20 20", fill: "none", xmlns: "http://www.w3.org/2000/svg" },
            React.createElement("path", { shapeRendering: svgShapeRendering, d: "M16.6189 5.88215C16.3406 5.60254 16.0099 5.38068 15.6458 5.2293C15.2817 5.07792 14.8913 5 14.4971 5C14.1028 5 13.7124 5.07792 13.3483 5.2293C12.9842 5.38068 12.6535 5.60254 12.3752 5.88215L13.0841 6.59198C13.27 6.40588 13.4907 6.25825 13.7335 6.15753C13.9764 6.05681 14.2367 6.00497 14.4995 6.00497C14.7624 6.00497 15.0227 6.05681 15.2656 6.15753C15.5084 6.25825 15.7291 6.40588 15.915 6.59198C16.1008 6.77808 16.2483 6.99902 16.3489 7.24218C16.4495 7.48533 16.5012 7.74595 16.5012 8.00914C16.5012 8.27233 16.4495 8.53294 16.3489 8.7761C16.2483 9.01926 16.1008 9.24019 15.915 9.4263L11.9209 13.4253C11.5461 13.8012 11.0376 14.0126 10.5072 14.0131C9.97679 14.0135 9.46791 13.803 9.09252 13.4278C8.71713 13.0526 8.50597 12.5435 8.5055 12.0124C8.50504 11.4814 8.71529 10.9719 9.09002 10.596L9.79399 9.88619L9.09002 9.17636L8.38107 9.88619C8.1018 10.1648 7.88021 10.4959 7.72902 10.8605C7.57783 11.2251 7.5 11.6159 7.5 12.0107C7.5 12.4054 7.57783 12.7963 7.72902 13.1608C7.88021 13.5254 8.1018 13.8565 8.38107 14.1352C8.94598 14.6935 9.70915 15.0046 10.5029 14.9999C10.8987 15.0016 11.2909 14.9247 11.6568 14.7737C12.0227 14.6227 12.3551 14.4005 12.6348 14.1202L16.6289 10.1211C17.1886 9.55744 17.5019 8.79438 17.5 7.99957C17.4981 7.20476 17.1812 6.44319 16.6189 5.88215Z", fill: "currentColor" }),
            React.createElement("path", { shapeRendering: svgShapeRendering, d: "M4.10649 13.4076C3.92017 13.2215 3.77233 13.0003 3.67146 12.7567C3.57058 12.5132 3.51865 12.252 3.51865 11.9882C3.51865 11.7244 3.57058 11.4632 3.67146 11.2196C3.77233 10.976 3.92017 10.7549 4.10649 10.5688L8.09806 6.56335C8.2835 6.3764 8.50393 6.22804 8.74667 6.12682C8.98942 6.02559 9.2497 5.97348 9.51257 5.97348C9.77544 5.97348 10.0357 6.02559 10.2785 6.12682C10.5212 6.22804 10.7416 6.3764 10.9271 6.56335C11.1122 6.75091 11.258 6.97384 11.3557 7.21895C11.4534 7.46406 11.501 7.72635 11.4959 7.99028C11.4974 8.25504 11.4466 8.51748 11.3464 8.76241C11.2462 9.00734 11.0986 9.2299 10.9121 9.41721L9.85435 10.4937L10.5629 11.2046L11.6206 10.1432C12.1837 9.57818 12.5 8.81186 12.5 8.01281C12.5 7.21377 12.1837 6.44745 11.6206 5.88243C11.0576 5.31742 10.2939 5 9.4976 5C8.70131 5 7.93764 5.31742 7.37458 5.88243L3.38301 9.88785C3.10317 10.167 2.88109 10.499 2.72955 10.8646C2.57801 11.2302 2.5 11.6223 2.5 12.0182C2.5 12.4142 2.57801 12.8063 2.72955 13.1719C2.88109 13.5375 3.10317 13.8694 3.38301 14.1486C3.95122 14.7036 4.71565 15.0097 5.50852 14.9998C6.30839 15.0005 7.07607 14.6838 7.64401 14.1186L6.93551 13.4076C6.75007 13.5946 6.52964 13.7429 6.2869 13.8442C6.04415 13.9454 5.78387 13.9975 5.521 13.9975C5.25813 13.9975 4.99784 13.9454 4.7551 13.8442C4.51235 13.7429 4.29193 13.5946 4.10649 13.4076Z", fill: "currentColor" }))));
});
