/* !!!IMPORTANT!!! */
/* DO NOT CHANGE THIS FILE DIRECTLY, IT IS AUTOGENERATED!!! */
/* USE GRAB-ICONS SCRIPT TO GENERATE IT */
import React from 'react';
import { ImageIcon } from './Image.icon';
import { LegendsettingsIcon } from './Legendsettings.icon';
import { CandlesIcon } from './Candles.icon';
import { AreaIcon } from './Area.icon';
import { LinechartIcon } from './Linechart.icon';
import { BarIcon } from './Bar.icon';
import { BaselineIcon } from './Baseline.icon';
import { HollowcandlesIcon } from './Hollowcandles.icon';
import { HeikinashiIcon } from './Heikinashi.icon';
import { HistogramIcon } from './Histogram.icon';
import { ScatterIcon } from './Scatter.icon';
import { CandletrendIcon } from './Candletrend.icon';
import { EquivolumeIcon } from './Equivolume.icon';
import { StepupIcon } from './Stepup.icon';
import { StepdownIcon } from './Stepdown.icon';
import { OnChartIndicatorIcon } from './OnChartIndicator.icon';
import { OffChartIndicatorIcon } from './OffChartIndicator.icon';
import { RemoveIcon } from './Remove.icon';
import { BinIcon } from './Bin.icon';
import { PathIcon } from './Path.icon';
import { EditscriptIcon } from './Editscript.icon';
import { ScriptIcon } from './Script.icon';
import { HelpIcon } from './Help.icon';
import { ArrowupIcon } from './Arrowup.icon';
import { ArrowdownIcon } from './Arrowdown.icon';
import { TickIcon } from './Tick.icon';
import { Removev2Icon } from './Removev2.icon';
import { SettingsIcon } from './Settings.icon';
import { ArrowrightIcon } from './Arrowright.icon';
import { MultiplechartsIcon } from './Multiplecharts.icon';
import { MaximizeIcon } from './Maximize.icon';
import { MinimizeIcon } from './Minimize.icon';
import { Chartlayoutv3Icon } from './Chartlayoutv3.icon';
import { LayersIcon } from './Layers.icon';
import { DownloadIcon } from './Download.icon';
import { SnapshotIcon } from './Snapshot.icon';
import { IndicatorIcon } from './Indicator.icon';
import { CompareIcon } from './Compare.icon';
import { IndicatortemplateIcon } from './Indicatortemplate.icon';
import { OpenIcon } from './Open.icon';
import { MagnedmodeIcon } from './Magnedmode.icon';
import { BrushIcon } from './Brush.icon';
import { HideIcon } from './Hide.icon';
import { UnhideIcon } from './Unhide.icon';
import { SyncIcon } from './Sync.icon';
import { LabelIcon } from './Label.icon';
import { LineIcon } from './Line.icon';
import { LabelandlineIcon } from './Labelandline.icon';
import { CalendarIcon } from './Calendar.icon';
import { Editv2Icon } from './Editv2.icon';
import { EnterIcon } from './Enter.icon';
import { LoadingIcon } from './Loading.icon';
import { EditIcon } from './Edit.icon';
import { DublicatescriptIcon } from './Dublicatescript.icon';
import { UpdateIcon } from './Update.icon';
import { Draghandlev2Icon } from './Draghandlev2.icon';
import { NewScriptIcon } from './NewScript.icon';
import { TrendlineIcon } from './Trendline.icon';
import { IconIcon } from './Icon.icon';
import { PricelineIcon } from './Priceline.icon';
import { ExtendedlineIcon } from './Extendedline.icon';
import { HorizontalrayIcon } from './Horizontalray.icon';
import { TimelineIcon } from './Timeline.icon';
import { HighlighterIcon } from './Highlighter.icon';
import { OvalIcon } from './Oval.icon';
import { InfolineIcon } from './Infoline.icon';
import { CurveIcon } from './Curve.icon';
import { ArcIcon } from './Arc.icon';
import { RayIcon } from './Ray.icon';
import { RectangleIcon } from './Rectangle.icon';
import { DateandpricerangeIcon } from './Dateandpricerange.icon';
import { DaterangeIcon } from './Daterange.icon';
import { PricerangeIcon } from './Pricerange.icon';
import { TrendchannelIcon } from './Trendchannel.icon';
import { UpIcon } from './Up.icon';
import { DownIcon } from './Down.icon';
import { ArrowIcon } from './Arrow.icon';
import { PitchforkIcon } from './Pitchfork.icon';
import { FibretracementsIcon } from './Fibretracements.icon';
import { FibarcsIcon } from './Fibarcs.icon';
import { FibraysIcon } from './Fibrays.icon';
import { FibchannelIcon } from './Fibchannel.icon';
import { CalloutIcon } from './Callout.icon';
import { PricelabelIcon } from './Pricelabel.icon';
import { Elliottimpulse1Icon } from './Elliottimpulse1.icon';
import { ElliottimpulseAIcon } from './ElliottimpulseA.icon';
import { FibextensionIcon } from './Fibextension.icon';
import { FibtimezoneIcon } from './Fibtimezone.icon';
import { GannboxIcon } from './Gannbox.icon';
import { GannsquareIcon } from './Gannsquare.icon';
import { GannfanIcon } from './Gannfan.icon';
import { TextIcon } from './Text.icon';
import { RegressiontrendIcon } from './Regressiontrend.icon';
import { FibspiralIcon } from './Fibspiral.icon';
import { CycleIcon } from './Cycle.icon';
import { FibtimeextensionIcon } from './Fibtimeextension.icon';
import { FibtimeratiosIcon } from './Fibtimeratios.icon';
import { ScaleIcon } from './Scale.icon';
import { DraghandleIcon } from './Draghandle.icon';
import { LinewidthIcon } from './Linewidth.icon';
import { TextcolorIcon } from './Textcolor.icon';
import { FillIcon } from './Fill.icon';
import { FavoriteIcon } from './Favorite.icon';
import { UnfavoriteIcon } from './Unfavorite.icon';
import { EventsIcon } from './Events.icon';
import { LegendIcon } from './Legend.icon';
import { ParametrsIcon } from './Parametrs.icon';
import { MarketdataIcon } from './Marketdata.icon';
import { PlusIcon } from './Plus.icon';
import { Hidev2Icon } from './Hidev2.icon';
import { Unhidev2Icon } from './Unhidev2.icon';
import { Lockv2Icon } from './Lockv2.icon';
import { Unlockv2Icon } from './Unlockv2.icon';
import { GroupIcon } from './Group.icon';
import { Binv2Icon } from './Binv2.icon';
import { SearchIcon } from './Search.icon';
import { TwitterIcon } from './Twitter.icon';
import { TelegramIcon } from './Telegram.icon';
import { LinkIcon } from './Link.icon';
import { KnowledgeIcon } from './Knowledge.icon';
import { ArrowleftIcon } from './Arrowleft.icon';
import { ZoominIcon } from './Zoomin.icon';
import { ZoomoutIcon } from './Zoomout.icon';
export const config = {
    defaultImage: React.createElement(ImageIcon, { label: 'Image' }),
    background: { settings: React.createElement(LegendsettingsIcon, { label: 'Legendsettings' }) },
    chartTypes: {
        candle: React.createElement(CandlesIcon, { label: 'Candles' }),
        area: React.createElement(AreaIcon, { label: 'Area' }),
        line: React.createElement(LinechartIcon, { label: 'Linechart' }),
        bar: React.createElement(BarIcon, { label: 'Bar' }),
        baseline: React.createElement(BaselineIcon, { label: 'Baseline' }),
        hollow: React.createElement(HollowcandlesIcon, { label: 'Hollowcandles' }),
        heikinashi: React.createElement(HeikinashiIcon, { label: 'Heikinashi' }),
        histogram: React.createElement(HistogramIcon, { label: 'Histogram' }),
        scatterplot: React.createElement(ScatterIcon, { label: 'Scatter' }),
        trend: React.createElement(CandletrendIcon, { label: 'Candletrend' }),
        equivolume: React.createElement(EquivolumeIcon, { label: 'Equivolume' }),
    },
    stepper: {
        plus: React.createElement(StepupIcon, { label: 'Stepup' }),
        minus: React.createElement(StepdownIcon, { label: 'Stepdown' }),
        clear: React.createElement(ImageIcon, { label: 'Close' }),
    },
    studies: {
        add: React.createElement(StepupIcon, { label: 'Stepup' }),
        studyOverlaying: React.createElement(OnChartIndicatorIcon, { label: 'OnChartIndicator' }),
        studyUnderlaying: React.createElement(OffChartIndicatorIcon, { label: 'OffChartIndicator' }),
        settings: {
            bigcross: React.createElement(RemoveIcon, { label: 'Remove' }),
            deleteScript: React.createElement(BinIcon, { label: 'Bin' }),
        },
        script: {
            addToChart: React.createElement(PathIcon, { label: 'Path' }),
            edit: React.createElement(EditscriptIcon, { label: 'Editscript' }),
            studyScript: React.createElement(ScriptIcon, { label: 'Script' }),
            help: React.createElement(HelpIcon, { label: 'Help' }),
        },
    },
    calendar: {
        up: React.createElement(ArrowupIcon, { label: 'Arrowup' }),
        down: React.createElement(ArrowdownIcon, { label: 'Arrowdown' }),
        arrow: React.createElement(ArrowdownIcon, { label: 'Arrowdown' }),
    },
    fontPicker: { arrow: React.createElement(ArrowdownIcon, { label: 'Arrowdown' }) },
    lineStylePicker: {
        arrow: React.createElement(ArrowdownIcon, { label: 'Arrowdown' }),
        tick: React.createElement(TickIcon, { label: 'Tick' }),
    },
    selectBox: { arrow: React.createElement(ArrowdownIcon, { label: 'Arrowdown' }) },
    legend: {
        secondarySeries: {
            delete: React.createElement(Removev2Icon, { label: 'Removev2' }),
            settings: React.createElement(SettingsIcon, { label: 'Settings' }),
        },
        arrow: React.createElement(ArrowdownIcon, { label: 'Arrowdown' }),
        separateStudies: {
            delete: React.createElement(Removev2Icon, { label: 'Removev2' }),
            settings: React.createElement(SettingsIcon, { label: 'Settings' }),
        },
        stackedStudies: {
            delete: React.createElement(Removev2Icon, { label: 'Removev2' }),
            settings: React.createElement(SettingsIcon, { label: 'Settings' }),
        },
    },
    toolbar: {
        arrow: React.createElement(ArrowrightIcon, { label: 'Arrowright' }),
        multichart: {
            settings: {
                mainIcon: React.createElement(MultiplechartsIcon, { label: 'Multiplecharts' }),
                checkboxTick: React.createElement(TickIcon, { label: 'Tick' }),
                maximize: React.createElement(MaximizeIcon, { label: 'Maximize' }),
                minimize: React.createElement(MinimizeIcon, { label: 'Minimize' }),
            },
        },
        layoutSettings: React.createElement(Chartlayoutv3Icon, { label: 'Chartlayoutv3' }),
        chartLayers: React.createElement(LayersIcon, { label: 'Layers' }),
        export: React.createElement(DownloadIcon, { label: 'Download' }),
        chartSettings: React.createElement(SettingsIcon, { label: 'Settings' }),
        chartSnapshot: React.createElement(SnapshotIcon, { label: 'Snapshot' }),
        studiesSettings: React.createElement(IndicatorIcon, { label: 'Indicator' }),
        compareChart: React.createElement(CompareIcon, { label: 'Compare' }),
        indicatorTemplates: React.createElement(IndicatortemplateIcon, { label: 'Indicatortemplate' }),
    },
    sidebar: {
        toggleBtn: React.createElement(OpenIcon, { label: 'Open' }),
        magnet: React.createElement(MagnedmodeIcon, { label: 'Magnedmode' }),
        drawingMode: React.createElement(BrushIcon, { label: 'Brush' }),
        hideDrawings: React.createElement(HideIcon, { label: 'Hide' }),
        showDrawings: React.createElement(UnhideIcon, { label: 'Unhide' }),
        syncDrawings: React.createElement(SyncIcon, { label: 'Sync' }),
        delete: React.createElement(BinIcon, { label: 'Bin' }),
    },
    yAxisMainPopover: {
        arrow: React.createElement(ArrowrightIcon, { label: 'Arrowright' }),
        checkboxTick: React.createElement(TickIcon, { label: 'Tick' }),
        reverseLabel: React.createElement(LabelIcon, { label: 'Label' }),
    },
    yAxisLabelsPopover: {
        checkboxTick: React.createElement(TickIcon, { label: 'Tick' }),
        label: React.createElement(LabelIcon, { label: 'Label' }),
        line: React.createElement(LineIcon, { label: 'Line' }),
        lineLabel: React.createElement(LabelandlineIcon, { label: 'Labelandline' }),
    },
    dropdownMenuItemWithPopover: { arrow: React.createElement(ArrowrightIcon, { label: 'Arrowright' }) },
    popup: { header: { bigcross: React.createElement(RemoveIcon, { label: 'Remove' }) } },
    dateInput: { calendar: React.createElement(CalendarIcon, { label: 'Calendar' }) },
    dateRange: { calendar: React.createElement(CalendarIcon, { label: 'Calendar' }) },
    checkbox: { checkboxTick: React.createElement(TickIcon, { label: 'Tick' }) },
    layout: {
        edit: React.createElement(Editv2Icon, { label: 'Editv2' }),
        customLayoutInput: React.createElement(EnterIcon, { label: 'Enter' }),
        delete: React.createElement(Removev2Icon, { label: 'Removev2' }),
        tick: React.createElement(TickIcon, { label: 'Tick' }),
        loader: React.createElement(LoadingIcon, { label: 'Loading' }),
        errorIndicator: React.createElement(ImageIcon, { label: 'Close' }),
    },
    indicatorsTemplate: {
        edit: React.createElement(EditIcon, { label: 'Edit' }),
        customIndicatorInput: React.createElement(EnterIcon, { label: 'Enter' }),
        delete: React.createElement(Removev2Icon, { label: 'Removev2' }),
    },
    period: {
        customPeriod: React.createElement(EnterIcon, { label: 'Enter' }),
        delete: React.createElement(Removev2Icon, { label: 'DeletePeriod' }),
        deleteV2: React.createElement(RemoveIcon, { label: 'DeletePeriod' }),
    },
    codeEditor: {
        duplicate: React.createElement(DublicatescriptIcon, { label: 'Dublicatescript' }),
        update: React.createElement(UpdateIcon, { label: 'Update' }),
    },
    scalingTool: {
        plus: React.createElement(ImageIcon, { label: 'MagnifierPlus' }),
        minus: React.createElement(ImageIcon, { label: 'MagnifierMinus' }),
    },
    trading: { resizer: React.createElement(Draghandlev2Icon, { label: 'Draghandlev2' }) },
    indicatorList: { add: React.createElement(NewScriptIcon, { label: 'NewScript' }) },
    themes: {
        dark: React.createElement(ImageIcon, { label: 'ThemeDark' }),
        light: React.createElement(ImageIcon, { label: 'ThemeLight' }),
    },
    drawings: {
        drawingsTypes: {
            trendLine: React.createElement(TrendlineIcon, { label: 'Trendline' }),
            path: React.createElement(PathIcon, { label: 'Path' }),
            icons: React.createElement(IconIcon, { label: 'Icon' }),
            hline: React.createElement(PricelineIcon, { label: 'Priceline' }),
            extendedLine: React.createElement(ExtendedlineIcon, { label: 'Extendedline' }),
            horizontalRay: React.createElement(HorizontalrayIcon, { label: 'Horizontalray' }),
            verticalLine: React.createElement(TimelineIcon, { label: 'Timeline' }),
            brush: React.createElement(BrushIcon, { label: 'Brush' }),
            highlighter: React.createElement(HighlighterIcon, { label: 'Highlighter' }),
            ellipse: React.createElement(OvalIcon, { label: 'Oval' }),
            infoLine: React.createElement(InfolineIcon, { label: 'Infoline' }),
            curve: React.createElement(CurveIcon, { label: 'Curve' }),
            arc: React.createElement(ArcIcon, { label: 'Arc' }),
            ray: React.createElement(RayIcon, { label: 'Ray' }),
            rectangle: React.createElement(RectangleIcon, { label: 'Rectangle' }),
            datePriceRange: React.createElement(DateandpricerangeIcon, { label: 'Dateandpricerange' }),
            dateRange: React.createElement(DaterangeIcon, { label: 'Daterange' }),
            priceRange: React.createElement(PricerangeIcon, { label: 'Pricerange' }),
            trendChannel: React.createElement(TrendchannelIcon, { label: 'Trendchannel' }),
            arrowUp: React.createElement(UpIcon, { label: 'Up' }),
            arrowDown: React.createElement(DownIcon, { label: 'Down' }),
            drawingsArrow: React.createElement(ArrowIcon, { label: 'Arrow' }),
            pitchfork: React.createElement(PitchforkIcon, { label: 'Pitchfork' }),
            fibRetracements: React.createElement(FibretracementsIcon, { label: 'Fibretracements' }),
            fibArc: React.createElement(FibarcsIcon, { label: 'Fibarcs' }),
            fibCircles: React.createElement(FibarcsIcon, { label: 'Fibarcs' }),
            fibRays: React.createElement(FibraysIcon, { label: 'Fibrays' }),
            fibChannel: React.createElement(FibchannelIcon, { label: 'Fibchannel' }),
            callout: React.createElement(CalloutIcon, { label: 'Callout' }),
            priceLabel: React.createElement(PricelabelIcon, { label: 'Pricelabel' }),
            elliottImpulseWave: React.createElement(Elliottimpulse1Icon, { label: 'Elliottimpulse1' }),
            elliottCorrectionWave: React.createElement(ElliottimpulseAIcon, { label: 'ElliottimpulseA' }),
            fibProjection: React.createElement(FibextensionIcon, { label: 'Fibextension' }),
            fibTimezone: React.createElement(FibtimezoneIcon, { label: 'Fibtimezone' }),
            gannBox: React.createElement(GannboxIcon, { label: 'Gannbox' }),
            gannSquare: React.createElement(GannsquareIcon, { label: 'Gannsquare' }),
            gannFan: React.createElement(GannfanIcon, { label: 'Gannfan' }),
            text: React.createElement(TextIcon, { label: 'Text' }),
            regressionTrend: React.createElement(RegressiontrendIcon, { label: 'Regressiontrend' }),
            fibSpiral: React.createElement(FibspiralIcon, { label: 'Fibspiral' }),
            cycleBrackets: React.createElement(CycleIcon, { label: 'Cycle' }),
            fibTimeExtension: React.createElement(FibtimeextensionIcon, { label: 'Fibtimeextension' }),
            fibTimeRatios: React.createElement(FibtimeratiosIcon, { label: 'Fibtimeratios' }),
            scale: React.createElement(ScaleIcon, { label: 'Scale' }),
        },
        settingsToolbar: {
            drag: React.createElement(DraghandleIcon, { label: 'Draghandle' }),
            linepicker: React.createElement(LinewidthIcon, { label: 'Linewidth' }),
            fontpicker: React.createElement(TextcolorIcon, { label: 'Textcolor' }),
            settings: React.createElement(SettingsIcon, { label: 'Settings' }),
            remove: React.createElement(BinIcon, { label: 'Bin' }),
            script: React.createElement(ScriptIcon, { label: 'Script' }),
            fill: React.createElement(FillIcon, { label: 'Fill' }),
            favorite: React.createElement(FavoriteIcon, { label: 'Favorite' }),
            notAFavorite: React.createElement(UnfavoriteIcon, { label: 'Unfavorite' }),
        },
        lineEnd: { arrow: React.createElement(ArrowrightIcon, { label: 'Arrowright' }) },
    },
    drawingGroups: {
        delete: React.createElement(Removev2Icon, { label: 'Removev2' }),
        edit: React.createElement(EditIcon, { label: 'Edit' }),
    },
    settings: {
        events: React.createElement(EventsIcon, { label: 'Events' }),
        legend: React.createElement(LegendIcon, { label: 'Legend' }),
        general: React.createElement(ParametrsIcon, { label: 'Parametrs' }),
        market: React.createElement(MarketdataIcon, { label: 'Marketdata' }),
    },
    periodTimeframe: {
        addTimeframe: React.createElement(PlusIcon, { label: 'Plus' }),
        addTimeframeActive: React.createElement(RemoveIcon, { label: 'Remove' }),
    },
    accordion: {
        arrowUp: React.createElement(ArrowupIcon, { label: 'Arrowup' }),
        arrowDown: React.createElement(ArrowdownIcon, { label: 'Arrowdown' }),
    },
    chartLayers: {
        hide: React.createElement(Hidev2Icon, { label: 'Hidev2' }),
        unhide: React.createElement(Unhidev2Icon, { label: 'Unhidev2' }),
        lock: React.createElement(Lockv2Icon, { label: 'Lockv2' }),
        unlock: React.createElement(Unlockv2Icon, { label: 'Unlockv2' }),
        createGroup: React.createElement(GroupIcon, { label: 'Group' }),
        deleteItem: React.createElement(Binv2Icon, { label: 'Binv2' }),
        close: React.createElement(RemoveIcon, { label: 'Remove' }),
    },
    pane: {
        movePaneDown: React.createElement(DownIcon, { label: 'Down' }),
        movePaneUp: React.createElement(UpIcon, { label: 'Up' }),
    },
    timezones: { searchInput: React.createElement(SearchIcon, { label: 'Search' }) },
    snapshot: {
        twitter: React.createElement(TwitterIcon, { label: 'Twitter' }),
        telegram: React.createElement(TelegramIcon, { label: 'Telegram' }),
        link: React.createElement(LinkIcon, { label: 'Link' }),
        image: React.createElement(ImageIcon, { label: 'Image' }),
    },
    chartGPT: {
        knowledge: React.createElement(KnowledgeIcon, { label: 'Knowledge' }),
        arrow: React.createElement(ArrowleftIcon, { label: 'Arrowleft' }),
    },
    zooming: {
        zoomin: React.createElement(ZoominIcon, { label: 'Zoomin' }),
        zoomout: React.createElement(ZoomoutIcon, { label: 'Zoomout' }),
    },
};
